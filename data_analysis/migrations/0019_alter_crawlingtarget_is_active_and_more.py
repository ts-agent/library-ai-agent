# Generated by Django 5.0.2 on 2025-04-28 11:30

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data_analysis', '0018_performance_poster'),
    ]

    operations = [
        migrations.AlterField(
            model_name='crawlingtarget',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='활성화 여부'),
        ),
        migrations.AlterField(
            model_name='crawlingtarget',
            name='last_crawled_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='마지막 크롤링 일시'),
        ),
        migrations.AlterField(
            model_name='crawlingtarget',
            name='platform',
            field=models.CharField(max_length=50, verbose_name='플랫폼'),
        ),
        migrations.AlterField(
            model_name='crawlingtarget',
            name='url',
            field=models.URLField(max_length=500, validators=[django.core.validators.URLValidator()], verbose_name='URL'),
        ),
        migrations.CreateModel(
            name='PerformanceSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_date', models.DateField(verbose_name='공연일')),
                ('session_time', models.TimeField(verbose_name='공연시간')),
                ('round_number', models.PositiveIntegerField(verbose_name='회차')),
                ('day_of_week', models.CharField(max_length=3, verbose_name='요일')),
                ('performance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='data_analysis.performance', verbose_name='공연')),
            ],
            options={
                'verbose_name': '공연 회차',
                'verbose_name_plural': '공연 회차',
                'ordering': ['session_date', 'session_time'],
                'unique_together': {('performance', 'session_date', 'session_time')},
            },
        ),
        migrations.CreateModel(
            name='InvitationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invited_count', models.PositiveIntegerField(verbose_name='인원수')),
                ('requester', models.CharField(max_length=100, verbose_name='요청자')),
                ('purpose', models.CharField(max_length=100, verbose_name='용도')),
                ('issued', models.BooleanField(default=False, verbose_name='발권여부')),
                ('note', models.CharField(blank=True, max_length=200, verbose_name='비고')),
                ('seat_grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_analysis.seatgrade', verbose_name='좌석등급')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='data_analysis.performancesession', verbose_name='회차')),
            ],
            options={
                'verbose_name': '초대 내역',
                'verbose_name_plural': '초대 내역',
            },
        ),
        migrations.CreateModel(
            name='SessionSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_seats_sold', models.PositiveIntegerField(verbose_name='판매좌석수')),
                ('total_revenue', models.PositiveIntegerField(verbose_name='매출액')),
                ('occupancy_rate', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='객석 점유율')),
                ('paid_rate', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='유료 비율')),
                ('free_rate', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='무료 비율')),
                ('target_revenue', models.PositiveIntegerField(default=0, verbose_name='목표 매출')),
                ('variance_revenue', models.IntegerField(default=0, verbose_name='목표 대비 차액')),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='summary', to='data_analysis.performancesession', verbose_name='회차')),
            ],
            options={
                'verbose_name': '회차별 판매 요약',
                'verbose_name_plural': '회차별 판매 요약',
            },
        ),
        migrations.CreateModel(
            name='DailySales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='날짜')),
                ('sold_count_total', models.PositiveIntegerField(verbose_name='누적 판매수')),
                ('revenue_total', models.PositiveIntegerField(verbose_name='누적 매출')),
                ('delta_count', models.IntegerField(default=0, verbose_name='증감(좌석)')),
                ('delta_revenue', models.IntegerField(default=0, verbose_name='증감(매출)')),
                ('performance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_sales', to='data_analysis.performance', verbose_name='공연')),
            ],
            options={
                'verbose_name': '일별 판매 집계',
                'verbose_name_plural': '일별 판매 집계',
                'ordering': ['date'],
                'unique_together': {('performance', 'date')},
            },
        ),
        migrations.CreateModel(
            name='SessionSeatGradeSales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sold_count', models.PositiveIntegerField(verbose_name='판매수량')),
                ('revenue', models.PositiveIntegerField(verbose_name='매출액')),
                ('occupancy_rate', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='점유율')),
                ('seat_grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_sales', to='data_analysis.seatgrade', verbose_name='좌석등급')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_sales', to='data_analysis.performancesession', verbose_name='회차')),
            ],
            options={
                'verbose_name': '회차·좌석등급 판매',
                'verbose_name_plural': '회차·좌석등급 판매',
                'unique_together': {('session', 'seat_grade')},
            },
        ),
        migrations.CreateModel(
            name='TicketOpenEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='오픈차수')),
                ('open_date', models.DateField(verbose_name='오픈일')),
                ('reservation_rate', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='예매율')),
                ('reservation_count', models.PositiveIntegerField(verbose_name='예매건수')),
                ('revenue_estimated', models.PositiveIntegerField(verbose_name='추정 매출')),
                ('performance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_open_events', to='data_analysis.performance', verbose_name='공연')),
            ],
            options={
                'verbose_name': '티켓 오픈 결과',
                'verbose_name_plural': '티켓 오픈 결과',
                'ordering': ['open_date'],
                'unique_together': {('performance', 'name')},
            },
        ),
    ]
